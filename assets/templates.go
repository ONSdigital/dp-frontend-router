// +build production
// Code generated by go-bindata.
// sources:
// templates/error.tmpl
// templates/main.tmpl
// templates/partials/footer.tmpl
// templates/partials/header.tmpl
// redirects/redirects.csv
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesErrorTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\xc1\x8e\xd3\x30\x10\xbd\xe7\x2b\x46\xbe\x3b\xd5\x5e\x51\x1a\x21\x01\x12\x48\x70\x5b\xc4\x71\x35\xb1\x27\xb5\x55\xc7\x63\x79\x26\xe9\x56\x4b\xfe\x1d\xa5\xb0\x2c\xad\x7a\xe2\xf4\xc6\xcf\x6f\x34\xe3\xf7\xdc\xf9\xb8\x80\x4b\x28\xb2\x37\x05\x0f\x64\x03\xa1\xa7\x0a\x92\x50\xc9\xf4\xcd\xbf\xf7\xa7\x8a\xa5\x50\xdd\xd8\xf0\x70\xa7\xe9\xe9\x49\xa3\x26\x82\x31\xcd\x12\xac\x0d\x98\x46\x6b\x07\x56\xe5\xc9\xf4\x2f\x2f\xd0\x7e\xaa\x95\x6b\xfb\x78\x11\xad\x6b\xb7\x0b\x0f\x7d\xd3\xed\x7c\x5c\xfa\xe6\x15\xef\xcc\x83\x82\x99\x92\xb5\x13\xd6\x9b\x85\x0e\x35\x7a\xbb\xa9\xee\xf1\x8e\x13\x78\x92\xa3\x72\xb1\x17\x62\x9c\x53\xb2\xa7\xe8\x35\x6c\x72\xac\x1a\x5d\xa2\xeb\xc6\x81\x9f\x61\xe0\x67\x6b\x0b\x7a\x4f\xfe\x77\x5d\xc9\x5b\x8f\xf5\x78\x7d\xb2\x56\xa8\x60\x45\x25\x6f\x13\x8d\x0a\x42\x4e\x23\x67\xf2\x66\x7b\xcd\x7f\x6f\xa9\x27\xb6\x1a\x62\xf5\x62\xfa\xe6\xcd\xb4\x8f\x24\xae\xc6\xb2\x4d\x80\x9f\x20\x38\xd2\xe7\xc7\x6f\x5f\x61\x5d\x9b\xae\xf4\x5f\x46\x38\xf3\x0c\xa2\x31\x25\xa0\xec\x78\xce\xba\xf9\x56\x79\x48\x34\x09\x94\x44\x28\x04\x1d\x42\xa8\x34\xee\xcd\x84\x31\x29\xbf\x3b\xd1\xd0\x3a\x9e\x26\xca\x2a\xef\x39\x4b\x7b\xe0\xa5\x9d\x8f\x06\x2e\x31\xee\xcd\x07\xce\x8a\x4e\xe1\xbb\x98\xde\xfd\xa9\x67\xe9\x76\xd8\xb7\xf0\x83\x00\x0b\x27\x3e\x44\x21\x18\xb9\x02\xe6\x33\xc4\xec\x38\x2f\x94\x23\x65\x47\xa0\x21\x0a\x4c\x78\x86\x80\x0b\x81\xc3\x59\xc8\xb7\xdd\xae\xfc\xcd\xfc\x16\xde\x22\xb9\xfe\x13\xaf\xf8\x2b\x00\x00\xff\xff\x38\x7a\x05\x98\xac\x02\x00\x00")

func templatesErrorTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesErrorTmpl,
		"templates/error.tmpl",
	)
}

func templatesErrorTmpl() (*asset, error) {
	bytes, err := templatesErrorTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/error.tmpl", size: 684, mode: os.FileMode(420), modTime: time.Unix(1513155567, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMainTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x7f\x6f\xdb\x38\x12\xfd\x7b\xf3\x29\x66\xb5\xc0\xc9\x6e\x44\xc9\xda\x5c\x7c\x4e\x6c\x05\x48\xb7\xc1\x5e\x80\xb6\x09\xae\x29\xee\x0e\x41\x80\xd2\xd2\x48\x62\x4b\x91\x2a\x39\xb2\x6b\x38\xfa\xee\x07\xca\x3f\xe2\xa4\x69\x2e\x8b\xa0\xff\x88\xa2\x66\xe6\xbd\x37\xc3\x21\x4d\x4f\x7e\x7d\x73\xf1\xc7\xd5\x7f\x2f\xcf\xa0\xa4\x4a\x9e\xec\x4d\x36\x03\xf2\xec\x64\x0f\x00\x60\x42\x82\x24\x9e\x9c\x2b\x42\xa3\xb8\x04\x8b\x66\x86\x06\xd0\x18\x6d\x80\xc1\x45\x9e\x8b\x14\x21\xd7\x06\xde\x73\x12\xda\xb9\x7c\x20\x4e\xc2\x92\x48\xed\x24\x5a\x45\xaf\x90\x2a\x24\x0e\x25\x51\xcd\xf0\x6b\x23\x66\x89\xf7\x1f\xf6\xf1\x94\xfd\xa1\xab\x9a\x93\x98\x4a\xf4\x20\xd5\x8a\x50\x51\xe2\x9d\x9f\x25\x98\x15\x18\xa4\xa5\xd1\x15\x26\xb1\x07\xd1\x2e\x48\x5a\x72\x63\x91\x12\xaf\xa1\x9c\x8d\xbc\xfb\xb6\x0d\xc6\x5c\x64\x54\x26\x19\xce\x44\x8a\xac\x9b\x04\x42\x09\x12\x5c\x32\x9b\x72\x89\x49\x1c\x0e\x82\xc6\xa2\xe9\xa6\x7c\x2a\x3b\x1e\xc5\x2b\x4c\xbc\x99\xc0\x79\xad\x0d\x79\xbb\xc8\x2b\x53\xae\x4d\xc5\x89\x65\x48\x98\xba\x84\x77\x54\x13\x4a\xac\x4b\xad\x30\x51\xfa\x91\x48\x2a\xb1\x42\x96\x6a\xa9\xcd\x4e\xd0\x6f\x87\xa3\xc3\xa3\xc3\xd7\x8f\xf8\xf3\xba\x96\xc8\x2a\x3d\x15\x12\xd9\x1c\xa7\x8c\xd7\x35\xb3\xc4\xa9\xb1\x6c\xca\x0d\xb3\xb4\xb8\x57\xb4\x07\x48\x52\xa8\x2f\x60\x50\x26\x9e\x2d\xb5\xa1\xb4\x21\x10\xa9\xd3\x5b\x1a\xcc\x13\xcf\x2d\x84\x3d\x8e\xa2\x34\x53\xa1\x56\x36\x2c\xf4\x2c\x6c\xbe\x44\xdc\x5a\x24\x1b\x89\x8a\x17\x68\xa3\x9c\xcf\x5c\x4c\x28\x52\xed\x01\x2d\x6a\x4c\xbc\xce\x12\x7d\x63\x1d\xd6\xc9\xde\xde\x2f\xbf\x2c\x97\x9f\x26\xbf\x32\x76\x2d\x72\x90\x84\x70\x7e\x06\xa3\x9b\x93\x4f\x70\x0b\x96\xe7\xf8\xcf\xab\x77\x6f\xdb\xb6\x53\x74\x5f\x93\x13\x6f\x4b\x44\xda\x08\x5a\x2e\xc3\x4b\x4e\xae\xcd\xde\x8a\xa9\xe1\x66\x71\xda\x49\xb9\xe4\x54\xb6\x6d\x94\x5a\x1b\x69\x99\x31\x81\x61\x6a\xad\x77\xb2\xe1\xbd\x46\x95\x89\xfc\x86\xb1\xc7\x18\x77\x94\x9d\x9f\xc1\xd1\xcf\x51\x25\x90\x1d\xad\x35\x6d\x39\x7f\xa8\xea\x5e\xb5\x0a\x5a\xcb\x72\x1f\x7e\x8a\xb6\x8a\x0b\xf5\x50\x1b\x63\x4f\xe8\x9b\x44\xab\xad\x3f\x99\xea\x6c\x01\xa9\xe4\xd6\x3a\x1e\x08\xaf\x16\x35\x42\xdb\xba\x15\x5f\x21\x01\x61\x55\x4b\x4e\x08\x5e\xcd\x8d\xdb\x56\xb6\x8b\x45\xe3\x41\x08\x6d\xbb\xb7\xee\x67\x2e\x14\x88\x2c\xf1\xdc\x8b\x07\x46\x4b\xdc\xbc\x13\x9f\x0a\x95\xe1\xb7\xc4\x63\xf1\x5a\xe0\x0a\x7a\x21\x50\x66\xeb\x12\x4c\xba\x1c\x9e\x64\xcd\xb5\x26\xc7\xba\xe5\xb4\xa9\x11\x35\x6d\x10\x7b\x79\xa3\xba\x9d\xda\x13\x81\x0d\x74\x50\x04\x26\xe0\x41\xd5\x5f\x8a\x6b\xff\x4f\xad\x0b\x89\xa7\x8a\xcb\x85\x3b\xaf\x2e\xa6\x9f\x31\x25\xff\x26\x31\x63\x71\x6d\x6e\x12\xf7\xb8\xbd\xdd\xc6\xf7\x97\x1b\x48\x67\x08\xbf\x26\xab\xe1\xf6\xf6\xfa\xa6\x1f\xd6\x8d\x2d\x7b\xdc\x14\x4d\x85\x8a\x6c\xbf\x0d\x3a\xa3\x4c\xe2\x57\x0a\xe7\xf0\x86\x13\xf6\xfa\x63\x9e\xd8\x30\x35\xc8\x09\xcf\x24\x3a\xc7\x9e\xee\x07\x6b\xd0\x2a\xb1\x61\x81\xb4\x36\xd8\xd7\x8b\x2b\x5e\xbc\xe7\x15\xf6\x74\xff\x7a\x70\x33\xe6\x21\xb7\x0b\x95\x26\xf1\x98\x87\xd6\xa4\x49\x31\xae\xc2\x9a\x1b\x54\xf4\x5e\x67\x18\x0a\x65\xd1\xd0\x6b\xcc\xb5\xc1\x9e\x4b\x6f\x8d\xda\xf6\x7b\x73\xa1\x32\x3d\x0f\x32\x9d\x76\xda\x02\x7f\x55\x1f\x3f\xf0\xa3\x68\x3e\x9f\x87\x45\x57\x04\xc6\x37\x55\x08\x53\x5d\x45\x77\xb3\xcf\xd6\x0f\xfc\x82\xfb\xfd\xf1\x1a\xb2\xe0\x3d\x7f\x95\x84\x1f\x80\xff\xf1\x94\x1d\x0e\x47\x47\xbf\x0f\x0e\xfe\xc1\x0e\xfc\x00\x96\x3e\x97\x52\xcf\x4f\x55\x5a\x6a\xe3\x1f\x03\x99\x06\xdb\x7b\xb1\x16\x55\xe6\x22\x6b\x5e\xa0\x3b\x68\xbb\x20\x37\xf1\x8f\x41\xea\xb4\xfb\x19\x09\x6b\x4e\xa5\x3b\x06\x61\x1f\x0a\xa4\x0f\xc8\x4d\x5a\xf6\xfa\xb0\x7f\xe7\x51\x72\x5b\xde\x01\x6f\x16\x69\xd7\x7b\xb9\xed\x29\xd7\x3a\xd1\x2b\xb8\xba\x78\x73\x01\x0c\xfe\x5d\xa2\x02\xdb\x39\x81\xb0\x50\xe9\x19\x66\x40\x1a\x0c\xaa\x0c\x0d\x1a\x98\xa3\x2f\x25\x28\x5c\x7d\xe6\x59\xb6\xf1\x26\x34\x15\x08\x45\x1a\x9c\x5e\xf8\xf3\x14\x0c\xda\x5a\x2b\x8b\x3b\x54\x51\x04\x22\xef\x7d\x9f\x49\x92\x24\xe0\x47\x2b\x24\xff\x9e\xb8\x28\xea\x86\x19\x37\xa0\x9a\x6a\x8a\xe6\x22\xff\x17\xda\x46\x92\x85\x04\x96\xcb\xdf\x44\xee\x78\x1a\x49\xe1\x03\x73\xdb\xc2\x72\xf9\x84\x09\xa5\xc5\xb6\x85\x81\x4b\x5f\xe4\x6d\x3b\xfe\x9e\xd4\x20\x35\x46\xdd\x95\x75\x9d\xe9\x3e\xf8\x7f\x7b\x80\x98\xf8\xb0\xff\x50\xdf\x03\xc0\x16\x1c\x23\x3c\x92\xdb\xe3\x34\xdf\x85\xbf\x8a\xb6\x47\xdf\x5d\xd4\xa6\x95\xf7\xf6\xb6\x9e\xef\x90\xdb\xc6\x20\x90\xa8\x10\xb4\x5a\x2d\x07\x83\xd4\x60\x26\xc8\x2d\x9a\xfb\x79\x3b\x8e\xa2\x12\x65\x1d\x6e\x7b\xd9\xdd\x29\xba\xee\x5e\xb5\xfc\xf6\x7b\x54\x75\x70\x42\x15\xcc\x01\x32\xad\xd8\x54\x37\x2a\x45\xe6\x70\xa3\x87\x2d\xe6\x7c\x4c\x1c\xf7\xfa\xcb\xdd\x76\xc6\x19\x2a\x72\x2f\x57\xa2\xc2\x0b\x75\xe9\x1a\x3a\x00\x3f\xee\x1e\x31\x3b\x18\x80\xc5\x54\xab\xcc\xba\x7e\x07\x5f\x69\xd5\x5d\xaa\x78\x87\xe9\x1f\x43\x0c\x6d\x7f\xdc\x3e\xca\x75\xf0\x4c\xae\xdf\xdd\xe3\x20\x66\xc3\x17\x70\x0d\x9f\xc9\xe5\xf6\xba\x3f\x8c\x59\x3c\x7a\x01\x59\x3c\x7a\x26\xdb\xdf\xbb\x2a\x8e\x5c\x6a\x2f\xc9\x6d\xf0\x4c\xba\xc3\x2e\xb9\x41\x97\xdd\x8b\xd2\x7b\x2e\xe1\x70\x95\xdf\x20\xde\xff\x2b\x6c\xcf\x00\x1e\x74\x0f\x16\x3f\x2b\x8b\x35\xac\x45\x72\x20\xba\xa1\xde\xba\xd5\x83\x38\x1e\x0c\x06\x3f\x74\x38\x88\x83\x83\x27\x1d\x86\x71\x30\x7c\xd2\x21\x1e\xc5\x41\x3c\x7a\x1a\x63\x10\x07\xc3\xc1\xff\x41\x19\x38\x98\x5d\xa7\x49\xb4\xb9\x0d\x4c\x22\x77\xa7\x71\xe3\xea\x4f\xce\xff\x02\x00\x00\xff\xff\x2b\xf0\xc6\xc8\xfc\x0c\x00\x00")

func templatesMainTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMainTmpl,
		"templates/main.tmpl",
	)
}

func templatesMainTmpl() (*asset, error) {
	bytes, err := templatesMainTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/main.tmpl", size: 3324, mode: os.FileMode(420), modTime: time.Unix(1513155567, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPartialsFooterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\xc1\x6e\xe3\x36\x10\xbd\xfb\x2b\x08\x9e\x2b\x73\xb1\x01\x7a\x28\x14\x01\x41\xd0\x6c\x17\x0d\xe2\x43\xb6\xe8\xd1\x18\x93\x23\x69\x6a\x6a\x28\x90\x23\x29\xee\xd7\x17\xb4\xe2\x38\xad\xbd\xe8\xc6\xd9\xf6\x62\xcb\x33\x7c\x6f\x9e\x39\x8f\x43\x95\x75\x08\x82\x51\x59\x0f\x29\x5d\xeb\x3e\x12\x4b\x51\xb4\xe4\x50\x57\x8b\xb2\xfd\x78\x48\x8c\x94\x06\xf0\x7e\xd7\x92\x73\xc8\xba\xba\x9b\x61\x9e\x78\x9b\x4a\xd3\x7e\xac\x16\xa5\xa3\xf1\xb0\x7a\x26\xd5\x7f\x0f\x4e\x11\xfa\x7e\x8e\x32\x8c\xe7\x00\x05\xc3\xa8\x6c\xf0\x45\x5e\xfa\x0f\xb4\x0d\x7e\x9f\x2a\x7c\x53\x04\xc6\x42\x5a\x8a\x6e\x8e\x74\xee\x18\xd9\xab\xbe\x3a\xa5\x5d\xaf\x5b\x04\x47\xdc\xe8\xea\x17\xf4\x7d\x69\xda\xab\x6a\x51\x0e\xfe\xdc\x4a\x4f\x49\x32\x8f\xa7\x73\x59\x12\xec\x72\x16\x54\x1b\xb1\xbe\xd6\xa6\x45\xdf\x1b\xb0\x16\x53\xa2\x0d\x79\x92\x9d\xae\x6e\x5e\xff\x2c\x0d\x54\x8b\xd2\x78\x7a\x23\xa7\x0d\x61\x4b\x98\x80\x5d\x1f\x69\x04\xbb\xd3\xd5\xed\x1c\x52\xc0\x4e\x3d\x07\x2f\x65\x17\x8c\x5d\xe6\xb6\x81\x1d\x09\x05\x4e\xba\xfa\x92\x63\x7b\xf2\x63\xf4\x35\xbf\x19\x7c\xfe\x74\x34\xfe\x57\xcd\xb9\xd9\x84\x41\xd4\xea\xe1\xf1\x7b\x76\x08\x32\xe9\x90\xcc\xd4\x82\x4c\xe8\x82\xae\x7e\x6f\x41\xd4\x84\xca\x85\x0b\xb6\xef\x40\x67\x21\x22\xc6\xa4\xab\xdb\xf9\xe1\x3d\x54\x81\x05\xac\x0c\x99\x6c\x7e\x54\xc3\x25\x7c\x8c\x53\xd2\xd5\x03\x4e\xef\x11\x23\x11\x38\xf5\x10\x91\xed\x0e\xd8\x35\x61\xc4\xc8\xc0\x16\x4d\x1d\x11\x5d\xe8\x42\x4d\x5c\x87\xd8\x41\x36\x48\x1d\x48\x57\x77\x73\x42\x85\x5a\x7d\x3e\xa6\xfe\x5f\xeb\xdc\x06\x66\xb4\xa2\x26\x92\x76\xbf\x7b\xdf\xcd\x40\xad\x48\x9f\x7e\x32\x46\x26\x12\xc1\xb8\xb4\xa1\x33\xab\x87\x47\x7d\xc0\x92\x0d\xfc\x3c\x34\x95\x40\x6c\x50\xae\xf5\x7a\xe3\x81\xb7\xba\xfa\x32\x63\xde\xde\x8e\x43\xd1\x69\x9a\x96\x35\x58\xdc\x84\xb0\x7d\x53\xe5\xbb\x67\xd0\xfb\x4a\xe7\x09\x8f\x8e\x78\x5f\xda\x86\xae\x07\xde\x99\x50\xd7\x64\xb1\xa8\x43\x26\xc8\x9d\x06\x5f\x24\x01\xa1\x24\x64\xd3\x37\xa9\xbb\xdf\xf3\x7e\xe6\xcb\xd5\xf5\xc3\xc6\x93\x5d\x36\x61\x74\xe8\x69\xc4\xb8\xdb\x6b\x04\x6b\xc3\xc0\x92\xcc\x6f\xbf\xae\x1e\x1e\x4d\x1a\x36\xc9\x46\xda\x60\x4c\xf9\x74\x7c\x93\xb6\x9f\x3b\x20\xaf\xc0\x63\x94\xaf\x8f\xbf\xc3\xd7\x7c\x97\x9d\x1a\xfb\xd5\x75\x77\x7a\xd1\x79\xb2\xc8\x69\x7f\xc7\x52\xd7\x9c\x4f\xae\xd7\xd4\x35\x5a\x81\x97\x6b\xbd\xfa\x74\xaf\xd5\x44\x4e\xda\x6b\xfd\xe3\x07\xad\x52\xb4\xc7\x8d\xb0\x8e\x97\x81\x53\xde\x89\xe5\xb0\x35\x90\x12\x4a\x32\xd4\x41\x83\xc9\x84\xc6\x2f\xfb\x7c\x3c\x16\x65\xff\xb5\x3a\x82\x4f\xa2\x3a\x88\x0d\x71\xe1\xb1\x96\x22\x75\x45\xf1\x41\x57\x8b\x1b\x9f\x0f\x27\x0b\xb2\x28\x4a\x0a\x46\x20\x0f\x1b\x8f\x6a\x60\x87\x51\x49\x8b\xaa\x84\x73\x3b\x7a\xec\xd4\xb3\x8d\x0e\x36\x81\x68\x5b\x1a\xf1\x45\xac\x0b\xd6\x84\x1e\xb9\x98\xa7\x4c\x87\x2c\xb3\x2e\x8b\x66\xc4\x98\x28\xb0\xb9\x32\xa7\x2d\x5a\xf5\xc8\xea\xd3\x0b\x46\xdd\xcf\x18\x35\x5e\x2d\x3f\xe4\x96\xa9\x32\xf5\xc0\xaf\xa5\xa9\xbd\x3e\x7c\x92\x3c\xcc\xf2\xbc\xa1\xa6\xcd\xff\x14\xbc\xd7\x55\x69\xf2\xf2\xea\x07\x85\x4f\x16\x7b\x51\x53\x8b\x11\x55\x90\x16\xe3\x44\x09\x55\x36\x37\xba\x45\x69\xfa\x53\x03\x1c\x3b\x4f\x2e\xbf\x28\xe1\xd4\x87\x98\x99\x5f\xbc\xf6\x47\x2a\x8e\x61\xfa\x13\x73\xbd\x8c\x3a\x05\x75\xee\x02\x90\x6f\xfe\x1d\x64\xe6\x9e\x57\x8b\xbf\x02\x00\x00\xff\xff\x00\x2c\x01\x11\xf1\x09\x00\x00")

func templatesPartialsFooterTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPartialsFooterTmpl,
		"templates/partials/footer.tmpl",
	)
}

func templatesPartialsFooterTmpl() (*asset, error) {
	bytes, err := templatesPartialsFooterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/partials/footer.tmpl", size: 2545, mode: os.FileMode(420), modTime: time.Unix(1513155567, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPartialsHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x4d\x6f\xdb\x46\x13\xbe\xe7\x57\xcc\xbb\xef\x25\x3d\xac\x58\xf4\xd2\x26\xa0\x08\xb4\xae\x81\x18\x48\xd2\xc2\x6e\x0e\x45\x60\x38\x63\xee\x90\xdc\x6a\xb9\xcb\xee\xae\x64\x0b\x2a\xff\x7b\xb1\xe2\xa7\x25\x52\xb6\xd1\xa0\x4d\x74\x22\x87\xf3\xf1\xcc\xcc\xb3\xb3\xa3\xb8\x20\x14\x64\x93\x17\x00\x00\x31\x42\xaa\xd0\xb9\x25\x73\x2b\x59\x29\xa9\x57\x0c\x0a\x4b\xd9\x92\xfd\xbf\x44\xa9\x19\x78\xbc\x95\x5a\xd0\xfd\x92\x7d\xcb\x92\xab\x95\xac\xc0\x1b\x08\x9f\x20\x35\xda\x93\xf6\x71\x84\xad\x2b\x21\x37\x20\xc5\x92\x55\x98\xd3\xaf\xe8\x0b\xd6\xb9\x2e\xa4\x20\x96\xec\x76\x8b\x0f\x97\x17\x75\x1d\x47\x42\x6e\x92\x17\x83\x4d\xab\x75\x67\xb1\xaa\xc8\xb2\xc6\xdb\xe1\xd7\x06\x34\xa4\x46\xf1\xa0\x38\xd2\x3a\xd4\x4c\x8d\xda\xab\x71\x95\x73\xa3\x89\xfb\x42\x5a\xd1\x48\x4a\x31\x48\x0e\x3c\xb4\xc5\x08\xf8\x95\xc9\x0d\x1f\x97\x22\x9a\xd0\x0d\xbf\xdd\xee\x53\xfc\x3f\xce\x3f\xca\x0c\x94\x27\xb8\x38\x87\x1f\xae\x93\x4f\xf0\x17\x38\xcc\xe8\xcd\x6f\xef\xde\xd6\xf5\xa4\xdd\x3e\x96\x2c\xf3\x0e\x71\x08\xc8\xc0\xd9\x74\xc9\x0a\xef\x2b\xf7\x3a\x8a\x52\xa1\x17\x46\xbb\x45\x6e\x36\x8b\xf5\x2a\x42\xe7\xc8\xbb\x48\x96\x98\x93\x8b\x8c\x76\x3c\xd8\x44\x9b\xef\xfa\xe7\x45\xa5\x73\x06\xa8\xfc\x92\xfd\x92\x65\x32\x25\xc8\x8c\x85\xf7\xe8\xa5\xd1\xa8\xe0\xca\xa3\x97\xce\xcb\xd4\x9d\xca\xe5\x23\x69\x21\xb3\x6b\xce\x9f\x92\xc5\x28\xfb\xbc\xc9\xfe\xd5\x75\x12\x24\xff\x59\x09\xdc\xe6\x5f\x2c\x41\xcf\xfb\x41\xb0\xe7\xf5\x03\xd1\x0c\x2d\xfd\x9d\x69\x48\xe8\x7a\x5e\x8e\x44\xe1\xb8\x70\xee\x4a\xa8\xac\xd4\x9e\xf3\xe6\xf8\x1c\x03\x10\xaa\xa1\x2b\xea\x7c\x8d\x39\xf5\xc7\xad\x17\x4c\xa7\x19\x0b\x7f\xa8\x79\x73\xe3\xa5\x57\xc4\x92\xb3\x02\x75\x4e\xd0\xc9\x5f\xc7\x91\xf0\x73\x5e\xc4\xb1\x17\xe9\xa9\x9c\x89\xda\x14\x58\x66\x40\x7f\xc2\xe2\x6d\x6b\x01\x8c\x34\xab\xeb\x61\x08\x0d\xae\xc2\xf9\x03\x99\x1a\xdd\xe6\xdf\x1d\xc5\x28\xdd\x2e\x76\xbb\xc5\x95\xf4\xf4\xb3\x09\x73\xa8\xae\xbb\xc1\xc2\x92\xb3\x6d\x69\x91\x72\x78\x79\xf6\xfb\x37\xa1\x3f\xbb\x1d\x69\x71\x82\x81\x13\x80\xd2\xed\x73\x01\xcd\xa2\x39\xd7\xb9\x92\xae\x80\x97\xe7\xef\x1f\x45\x13\x47\x42\x4c\xb4\x38\x12\xea\x59\x24\x73\x94\x1a\x2d\xd0\x6e\xb9\xc6\x0d\x3c\x9d\x72\x8f\x30\x6d\xdd\x30\x4d\xe3\x86\xf7\x11\xd8\x64\xcc\x50\x27\xe7\xe1\x0f\x17\x5e\x78\xaa\x8c\xa6\x46\x34\x47\x46\x25\x67\xfc\x3c\xc2\xa5\xd1\xc5\x75\x18\x5f\xaf\xe0\x08\xc0\x68\x98\x5b\x52\x84\x8e\x52\x54\x14\xcc\x58\x72\xd9\x08\xa0\x93\x1c\x9d\xec\xa1\xf8\x4a\x7e\x31\x69\x94\xe4\x0b\x23\x8c\x32\xf9\x96\x25\xef\x86\x97\xaf\x03\xbd\xa6\x3b\x17\x60\x0b\x89\x5f\x07\x60\xbc\x35\x6b\xbf\x76\x2c\xf9\x31\x3c\x7c\x39\x98\x87\x89\x34\x89\xde\xa3\xcd\xc9\x2f\xd9\xcd\xad\xc2\xf0\x6e\x49\x2d\x99\x36\xa6\x22\x4d\x16\xb4\xb1\x94\x91\xb5\x64\xbb\x3c\xbb\xcb\xf7\x56\x99\x7c\x7c\xfb\xb2\xe4\x27\x65\xf2\x67\xa6\x1d\x47\xeb\xd3\xe3\x6b\xf4\x3a\x7e\x1c\x0d\xb4\xca\xca\xb2\x1b\x67\xd3\x43\x2a\xd6\x78\x38\x10\xd7\xaa\x33\x0f\xf5\xe0\x61\x51\xb5\x46\x4d\x5d\xfb\xa3\xa6\x3c\x50\x3d\xd9\x94\x18\xbb\x15\x39\xd8\xb4\x08\xd9\x7e\x42\x96\xa4\xd7\xdc\x9b\x3c\x57\xc4\x00\xad\xc4\xde\x63\x13\xa0\x57\x9e\x0e\x1a\xcc\x4f\x31\xc1\x55\xa8\x67\x4c\x3d\xdd\xfb\x70\xa0\xf4\x3a\x8e\x82\xda\x5c\x9f\x26\x1a\x38\xd3\xbc\x93\xa5\x81\x27\xd5\xc6\x11\xda\xb4\x68\x4a\xd3\x3c\x9f\x2a\x4e\xa7\x3d\x1d\xb5\xfd\xfa\x4f\xaa\x73\xb5\x77\xf1\x19\xea\x33\x41\xec\xe3\x3f\x32\x10\x30\x84\x9d\x60\x4f\x59\x41\x9a\xf5\x97\x68\x4f\x83\x7d\x15\xe8\xbe\x42\x2d\x48\x2c\x59\x86\xca\xcd\x5d\xc0\xc7\x07\xe2\xa9\x17\xeb\x03\x93\x7d\xf3\xfa\xbd\xe7\xc3\xe5\x05\xb0\x88\xd5\xf5\x91\x0e\xe7\x98\x7a\xb9\xa1\x76\x69\x69\x87\xcb\xb0\x9b\x1a\x25\xb8\x24\xce\x85\x74\x95\xc2\x2d\xbf\x55\x26\x5d\xcd\x76\x67\x98\x61\x07\xf8\xf5\x6a\xd8\x52\x4a\xc1\xbf\xef\xf7\x95\x57\xa3\x3f\x5f\x6f\x4c\x49\x9f\x7f\xf4\xf4\x73\xa3\xfd\x12\x47\xdd\x1f\xe3\xbf\x03\x00\x00\xff\xff\x92\xea\xe8\xf4\x22\x0f\x00\x00")

func templatesPartialsHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPartialsHeaderTmpl,
		"templates/partials/header.tmpl",
	)
}

func templatesPartialsHeaderTmpl() (*asset, error) {
	bytes, err := templatesPartialsHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/partials/header.tmpl", size: 3874, mode: os.FileMode(420), modTime: time.Unix(1513155567, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _redirectsRedirectsCsv = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5c\xcf\xb6\xdb\x28\xd2\xdf\xdf\x67\x89\xa2\x24\xdd\xfd\x7d\xe7\xcc\x36\x67\x16\xbd\xe9\x5e\xe4\x01\x72\x30\x94\xa4\x8a\x11\xa5\x5b\x80\x6e\x3c\x4f\x3f\x07\xd0\x5f\x5b\xb6\x25\x5b\xb7\xbb\x67\x93\x6b\x09\xf8\xfd\xaa\x80\x2a\x8a\x02\x25\x07\x49\x86\xea\x53\x5e\x32\x59\xab\xa8\x06\xeb\x50\x36\x4c\xca\x4b\x57\xaa\x26\x7f\xad\xd1\x5e\x2b\x7c\xad\xf1\xc3\x5d\x80\x1a\x5c\x45\x8a\x34\x95\x08\xb7\x90\x5e\xf2\x06\xa8\xd1\xd0\x50\xe3\xb5\x70\x48\x46\x18\x25\xa9\xae\xbd\x41\x77\xca\x2b\xf2\x16\x4d\x99\xe4\x09\x0f\xd0\x30\x4a\xb0\x4e\x38\x0c\x58\xb6\x20\xb6\xb5\xd0\x5a\x30\x08\x1b\x25\x5b\x85\x37\x17\x6f\x0d\xf0\xcb\xa0\xb2\x49\xb0\x5a\x48\x49\xde\x38\x9b\xfb\xa3\x05\xe9\x88\x87\x17\x51\x5a\x34\x0a\x7e\x52\x61\x81\xdb\x00\x3c\xeb\xb5\xfb\x10\x73\x01\x2f\xb1\x5e\x72\xa8\x1b\x4d\xa7\x1a\x8c\x13\x46\x69\x71\x20\xcf\xb5\xe0\x23\xb8\xae\x07\xd0\xbc\x11\x1f\xf3\x54\xd2\xf5\x39\xb6\xa1\x13\xa2\x78\x97\xef\x93\x84\x0f\xa3\xce\x25\x5e\x84\x1f\xfb\xb0\xa4\x16\xd8\x04\x9a\xc6\x1f\x34\xca\x4e\x7b\xa3\x9c\xf8\x09\x36\x9f\xbe\x2c\xd0\x08\x23\x21\x49\xbd\x50\x60\x85\x51\x23\x9c\x82\x02\x25\x06\xe1\x15\x1c\x9c\x37\x0a\xd8\x55\x50\x0b\x61\x1d\xa3\xac\x9c\x63\x10\xbd\xaa\x8f\xcb\x32\xd7\x75\x3f\xa1\xc6\x0e\x42\x53\x0c\xd3\x37\xce\x4c\x34\x2a\x0c\x7d\xd7\x0d\xb1\x5f\x81\xa7\x25\x33\x9d\xae\x36\x3f\x93\x7c\x19\xe7\x25\x3f\x04\x33\x01\x6b\xd1\x28\x6f\x1d\x9f\x42\x6f\xb0\x50\x90\x33\x38\x81\xba\x7f\x9d\xa4\x49\xef\xac\xd0\x60\xe3\x44\x8d\x92\xac\x45\x98\x0b\x74\x0e\xc5\x16\x37\x74\xcb\x68\xc7\xb1\x71\xd5\xe0\x23\x9d\xe2\x8f\x8b\x38\x8f\x3a\x80\xde\x06\xc8\x3c\xe5\x02\xfc\x71\x09\xef\x86\x50\x07\xa1\xc3\x4c\xa4\xa2\x11\xd1\x9e\x3b\xa9\xfc\x31\x0e\xc3\x6d\x59\x2e\xdb\x9e\x0b\xd3\x83\xdc\xf1\xdf\xb3\xd7\x35\x96\x1c\x7f\x4f\x5e\x87\x15\xa1\x16\xae\x1f\xc1\x2f\x9f\x3e\x7f\x96\x60\xac\xb7\x33\x4f\x0c\xa6\xd4\xc2\x28\x61\xd4\x5b\x98\x1a\xb5\x60\x59\x85\xaa\xf7\x1d\xfe\x06\x01\xe6\x2a\x6e\x97\xe4\xde\x52\x06\x42\xbb\x4a\x18\x65\x49\xa2\xd0\x52\x30\xe4\x52\x78\x0b\x96\x0a\x05\xc2\x55\xa9\x07\x84\x96\x54\x91\x66\xd0\xc2\x81\x8a\x05\x16\x8d\xab\xc0\x1f\x57\x2c\x6f\x77\x39\xe6\x4a\xde\x26\xbb\xe1\x06\xfa\x82\xe1\x47\xbf\x34\x75\x4a\x18\xe3\x85\x1e\xca\x3c\xb7\x70\xba\xed\x15\xae\x03\x9e\x49\xbc\x8c\xbc\xf3\x34\x4c\x2c\x35\xaa\x13\x08\x5e\xa8\xf5\x8e\xf3\x6e\x05\xf5\xea\xb5\x7f\x56\x2d\x3d\x00\xb8\x53\x33\x57\x73\x24\x49\xdd\x29\x1a\xbb\x25\x14\xb8\x41\xb2\xa4\xd9\x32\xdb\x4e\xb6\xd3\x12\x2a\x71\xd0\x50\x13\x3b\xa1\xd1\x9d\xd0\x9c\x19\xec\x3b\xd8\xd0\x2a\xd2\x3b\x0a\x1e\x90\x5d\x65\x93\x01\x86\x09\x23\x98\x51\x94\x60\xf3\xf4\x2a\xa9\x17\x2b\x05\x83\x65\xe7\x02\x61\xf0\x47\x68\x0a\x11\x02\x8c\x50\xeb\xbe\x6e\xf7\x68\xe6\x9a\xad\xe0\x5b\xe3\x22\x44\x17\x00\x5a\xfc\x0f\x84\x99\x44\x32\xd9\x42\xd2\xa9\xab\xa5\xa0\xa6\x92\x45\x53\xad\xf5\x13\xd7\x50\xcf\x54\x58\x82\x9f\x86\x13\x2d\x58\x17\x57\xb8\x06\x8c\x0d\x93\x32\x32\x79\xdb\x2f\x97\xa3\x20\x7d\xcd\xb3\x90\xe2\x06\xc0\xb2\x28\x33\xa4\xdd\x4c\xb9\x47\x67\x28\xd1\x3a\xe0\xb1\x7e\x32\xb3\x03\xc3\xfb\x58\xf5\x4a\xe2\x47\x0c\x9c\x8c\x42\xd7\x75\xa9\x42\x0b\xc2\xf6\xda\xca\x10\x9d\x70\xa2\x4c\x9e\x75\x5c\xa4\x1f\xb4\xf0\x45\xb2\xb9\xaa\x77\x58\xdf\x43\xc5\xd0\x87\xd8\x0a\x3d\x10\x85\xb5\x4f\x6b\x70\x68\xde\x5d\xd1\x3b\xdc\x9b\xe3\x61\x29\x1a\x74\x01\x8e\xe4\x31\x90\x77\xcf\x32\xac\x04\x75\xf3\x74\x80\xbc\x0a\x7e\x0f\x37\x2c\x2b\xd4\x6a\x70\xf6\x5b\x26\xde\x36\xf7\x7b\x83\x67\xb5\xdb\x98\x6e\x4d\x1b\x60\x4b\xc6\x80\xee\xd4\xc0\x16\x75\x1f\x65\xcd\x95\x78\x0a\xfc\x4c\x89\x6b\x2c\xbb\x79\x3e\xa9\x05\xd6\xc2\xb8\x38\x29\xde\xc5\xc5\x9d\x33\x3c\x3a\x89\x24\x19\x09\x4d\x57\xbf\x00\x76\x18\x06\x96\xc7\xb0\x73\xac\xb0\xcb\xac\xba\xc5\x77\xa6\xe1\x32\xf1\x0d\x13\xb7\xc2\x81\xd6\xe8\xe0\xcc\xc6\xa3\xb5\x01\x3b\x06\xa3\xee\xe4\xbc\x2e\x21\x2e\x84\x9a\x63\xed\x61\xbc\xfd\x1e\xa7\x25\xdd\xa2\x29\xa5\x26\xeb\x18\x15\xfa\x5a\x61\x51\xa0\x44\x0d\x2b\xe3\xc4\x6d\xc6\xbc\x81\xf7\x1d\xd4\xac\xd9\x8a\xbf\x42\xad\x29\xcf\x7e\x6a\x74\xdb\x53\x47\x8a\x7d\xd9\x10\x5a\x32\x68\xca\x07\x42\xfb\x47\x74\x5b\x4f\xfe\xb0\xc2\xd8\x12\xf7\x09\xce\xee\xc1\xee\xaa\x5d\x47\x70\xa6\xde\x0d\xa6\x1b\x61\x7d\x4c\x63\xa2\x71\xc0\x26\x44\x02\xd3\x3c\x20\x04\x59\x80\x25\xdc\x0e\xe1\x97\x11\xe6\xc2\x4d\xa1\x46\x2f\x04\xa6\x45\xa6\x98\x52\x9d\xf8\x91\xc4\xbd\x54\x44\x46\x20\x43\x8d\x36\x06\xe6\x33\x6f\xb4\x0c\x75\x26\xc4\x2a\xcc\x67\xc4\x03\x03\x5c\x9e\xf6\x12\x6c\x40\x7b\x4e\xa4\xc9\xeb\x98\x01\xdf\x4f\xbc\x05\xe4\x3d\xbc\x04\xfc\x94\x60\xed\x5b\x9c\x52\xcf\xec\xfc\xb7\xb9\x87\xd5\xac\x5b\xd2\x68\x68\x0c\xb5\x93\xed\x71\x41\x0c\x58\x1a\x85\x0c\xd2\x8d\x3b\xc7\x42\xe1\xc6\x74\xda\x04\x78\xae\xc6\x4d\x86\x7d\xd2\x32\x65\x8a\xfc\xc8\xd8\x06\x24\x86\xc5\x2e\x26\x11\x86\x4e\xdb\x3f\x27\x73\x8f\x71\x79\x98\xd6\xc6\x8d\x82\xc3\x12\x10\xa6\x48\x78\x46\x53\x56\xe4\x79\x9e\xf4\x4f\xad\x25\x59\x67\x1b\xe0\x50\xbe\x29\x32\xbd\xc2\xb0\x78\x28\xb8\x48\xb5\xf6\xc4\x64\x38\x53\xc0\x56\x38\xe8\x4e\x47\x39\x5a\x68\x3a\x0f\x7d\xe4\x00\x65\x0d\xe8\x96\x73\xdf\x60\x62\x65\x08\x5b\x55\x3c\x98\xa9\x48\xab\x94\x5b\xc0\x35\x39\xaf\xe5\x23\xdf\xab\x98\x0f\x27\x93\x87\x5f\x6f\xe8\xaa\x2e\x89\x3e\xca\xcf\x46\xe8\xa1\xc6\xf3\x79\xe4\x45\xb2\x4b\x0d\xaf\xb2\x4e\x56\x88\xf8\x17\x25\x79\xd7\x78\x17\x07\x76\x72\xa8\x3b\x7d\xa8\x41\x58\xcf\xe3\xcc\x89\xf0\x29\xa6\x97\x54\x37\x82\x43\x6c\x64\xc7\x03\xaa\xf1\x4c\xf9\x71\xaa\x45\x95\xee\x73\xde\x19\x41\x0d\x18\xe0\x83\xb7\x24\xcf\x68\xeb\x05\x95\x1a\x61\x2d\x98\x32\xa5\x41\xe0\x84\xcd\x8a\xc1\xba\xc4\xbd\x21\xff\x19\xc1\x9d\xa8\x6b\xda\x32\xbd\xba\x14\x39\xbe\x47\x33\xbb\x71\xb0\x05\xf1\x86\xb0\x97\xd0\x2b\x0c\x38\x5a\x95\xac\x04\x0b\xe9\x80\xd3\xae\x32\xaf\xa8\x86\x3e\xf8\x1b\x1c\x7a\x0d\x0a\x85\xb7\xa2\x9c\xa9\x05\x4e\xc8\xb0\xc6\x8e\x16\x1a\x03\x47\x85\x2d\x2a\x2f\xf4\x4a\xdb\x7f\x48\x8a\xa5\xae\x58\x21\xce\xea\x35\x24\xfc\xd3\x68\x21\x41\xa1\x6d\xbc\x83\x89\xab\x1f\x13\x74\xd3\x8b\x1a\x7d\xbd\xc9\x59\xda\xae\x54\x4b\xb7\x37\x2e\x38\x77\xcb\xd9\xa4\x96\x45\xdc\x7f\x44\x70\x5d\xbc\x4f\x76\xfa\x0a\xd1\xce\x8a\xa4\x96\xef\xa8\xc0\x40\xf0\x40\x40\xa6\xd0\x8a\x43\xcc\xfc\x74\x22\x63\x01\xd4\x34\xc4\x2e\xb4\xc1\xd9\x94\x7a\x06\xfc\x4c\xee\xab\x2c\xf7\x56\xd7\x98\x48\x14\x21\x38\x1b\x0c\xad\xbf\x54\x93\xa3\x91\x54\x07\xff\xfa\x16\x65\xe9\x15\x8a\x19\x95\x10\x00\x09\xa3\x0a\x22\xb5\x56\xa3\x4d\x5c\xe7\xfa\x5d\x25\x7d\xf6\x2c\xba\x61\xfa\x01\x72\xe2\x01\x6a\xc1\x29\xb3\x2d\x9c\xb7\x8b\xf5\x9e\x3d\x8c\x9e\x52\xce\xf5\xbc\xcf\x7d\x7b\xe1\x92\x95\x30\x21\x1a\xa7\x61\x47\x52\x03\x87\x45\x2f\x04\xdf\xf2\xd5\xa3\x9d\xfa\xba\xe5\xb2\x5a\xdc\x5e\xca\x56\x73\x9c\xa9\x76\x9d\xec\xf1\x9b\x0f\x35\x19\x57\xe9\xd3\x7b\x5c\x7d\xb8\x06\xbd\x9b\x33\x0b\x95\xa2\xab\xfc\x41\x87\xf7\x71\xc7\xe7\x0c\x8f\x99\xca\x2c\x32\x19\x5f\x47\x1d\x6c\x3c\xad\x06\xae\x97\x2b\x0d\x31\x70\x41\xac\x49\x0a\x2d\xbc\xab\x88\xa3\x87\x7a\x38\x18\xbf\x22\xcf\x5c\xf5\x0d\x82\x6d\x4e\x2d\xbe\x6f\x3f\x6d\xce\xa3\xfc\x8d\xdd\xf4\xfc\xb1\xd8\xb4\x68\x44\xdb\xfb\x58\xec\x2a\xcb\xff\x98\xe7\xd9\x1c\x30\x0c\xef\x42\x80\x00\x3f\x1b\x90\x4e\x18\x89\xbd\x12\xd4\xa0\xe9\xce\xa6\x43\x05\xeb\x4e\x1a\x9e\x89\x4f\xae\xd3\xcd\x35\xbc\xc9\xfb\xb0\x9a\xe1\xa7\x3d\x59\x07\xdd\x06\xb3\x9f\xce\x07\x60\x10\x2d\x8c\x97\x24\x5a\x1a\x36\x6c\xcf\x53\xcd\x35\xbb\xcf\xb9\xdb\xfa\xd1\x0a\x29\x8c\x3c\x6d\xdf\xa2\xac\x5e\x3f\xce\x19\x56\xa7\x31\x3a\x73\x4b\xb3\xfb\xf2\x32\xfc\xac\x7c\x5a\x3c\xf8\x1b\x50\x3e\x5d\x30\xda\x92\xd1\xb8\xce\xba\xec\x0d\xd6\xd1\xaf\xcd\xed\xcd\x89\x9f\xbf\x2c\x7e\x05\xaf\x6b\xfb\x97\x8e\x86\x23\x27\xf4\x1c\xe6\xef\x19\x97\x65\x41\x76\xdf\xe2\xb8\x0a\xa0\x28\x40\x3a\x4b\x45\x3c\x39\x11\x46\x1d\xc0\x40\x81\xce\x92\x19\x40\x52\xdb\x77\xdd\xf7\xdc\x96\xa4\xbb\x3a\x3f\xca\x72\xa7\x27\x40\xf7\xbb\x8e\xf8\x8b\x58\xe8\xe9\xf5\xaa\xfe\xc6\xfa\x50\xb8\xe5\x5a\xc4\x3d\xec\xf3\x1b\xed\xcb\x24\x5b\xee\x0a\xd6\xaf\xbf\x8d\x95\x0e\x27\x34\xd6\x73\xe8\xd3\x98\xa9\x34\x08\x43\xbb\xc2\x1b\x35\x36\x7e\xf4\x42\xe1\xe3\x74\xa3\x52\xa1\x47\x66\x97\x32\xd2\x97\x5a\x68\x1b\xb2\xe2\xa0\xe1\x6c\x38\xfb\xef\x3d\x52\xa3\xdb\x75\x67\x6a\x6d\xe5\x39\xff\x2a\x64\x25\xe1\x96\xd1\xa2\x37\x03\x6c\x2b\x6c\xa8\xf0\xc7\x57\x4f\x0e\x94\xad\x04\x5f\xf8\xc6\xd5\xe3\x71\x0b\xf0\xe9\x7b\xb2\xfe\xd8\xd7\xdb\xf5\x7e\xec\x08\x7b\xa5\xfe\x93\xe7\x97\xfe\x38\xfb\xf4\x2f\x44\x60\x46\xa1\xf3\x0c\x64\x18\x2c\x08\x0e\x9b\x77\xa5\xa0\x05\x4d\xcd\x10\x69\xef\x70\xae\xf9\x10\xf3\xcb\xfc\xbb\xc6\x56\x68\x0f\x42\x29\x50\x65\x2b\x16\xe6\xfe\x58\x3e\x7e\x94\x23\x9a\x86\x49\xc8\xea\xf2\x2b\xc9\x39\xda\x8d\x19\x7e\x07\xf6\x65\xdd\xd7\x9b\xaf\x5e\xb0\x03\xd6\xa7\x69\x76\x23\xdd\xf9\x0c\xf6\xa3\x2d\x15\xdd\x15\x49\x61\x2d\xb8\x59\x66\x79\xd3\xc7\x9d\x0f\x13\xbd\xe4\xe9\xa7\xcd\x4b\x70\x99\x75\x01\x46\x7d\xa8\x9c\x6b\xec\xbf\xf2\xbe\xec\x23\x19\xfb\xb1\xa4\xf6\xa3\x3f\xbe\xe4\x2d\x5a\x2f\x34\xda\x74\xb6\x9b\x87\x09\x20\xc9\x38\x30\x2e\x57\xd0\xfe\x92\xff\xf9\xc7\xb7\xef\xdf\xfe\xfc\xfa\x9d\xa4\xf4\x4d\xac\xf4\x5d\x92\x42\x53\x7e\x77\x44\xfa\x63\xe5\x6a\x3d\xe0\x93\xb1\x0a\xcb\x20\xd6\xc7\x12\x5d\xe5\x0f\x1f\x91\x72\xd5\x64\x32\x88\x89\x05\xa6\xf9\x9f\x85\x86\x36\xb7\x21\x88\x10\xac\xb2\x11\x59\xe8\xb3\xaa\x6b\xd8\xd7\xa9\xf0\xc7\xb7\x6f\xff\xfe\xfa\x5d\xa1\x95\xd4\x02\x9f\xfe\x32\xe1\xaf\xf2\x3e\x79\x4b\xe3\xcc\x32\x2d\x70\xe9\x51\x81\xa3\x85\xdb\xad\xbb\xde\xd1\xb8\x4d\xf5\xc3\xeb\xd3\x97\x4f\x9f\xff\xff\xe6\xa0\x7c\xfb\xfd\x6b\x1a\xd8\xdf\xbf\x7e\xaf\x10\x38\xf8\x8d\xd3\xf7\x16\xe1\x6d\x8f\x11\xe9\x1c\x1c\x5e\x99\x4c\xcb\x9c\x2f\x39\x83\xee\xee\x6d\xa7\x9d\x79\x81\xa5\x67\xb0\x64\xfa\x3b\x6b\xdd\x5d\x7c\x75\x38\x09\x06\x41\x85\x0f\xfa\x31\x58\x54\x60\x24\x9c\x65\x4e\xbe\x7c\xfa\xfc\x5b\xfa\x38\xe7\xc3\xce\xc8\x3f\xbc\x81\x2f\x9f\x3e\xff\x5f\xc3\xd4\xa2\x8d\xf3\xee\x25\x4f\x5f\xd5\xe5\x15\xe8\x26\x77\xc0\x75\xbc\xac\x3d\x9c\x44\x7d\xe8\xcb\xd3\x1f\xc7\xc2\xd8\x82\xb8\xee\xd3\xce\x25\x8b\xba\x86\x85\x86\x73\x60\x49\x74\xc4\x18\x9d\xc6\x6b\x08\xf2\xb4\x12\xb7\xab\x1d\x26\x49\xdc\x2b\xcf\x50\x57\x62\x84\x39\xd5\xd5\x00\xeb\x5e\x86\xdd\x88\x24\x53\x7c\xc8\xc3\x2e\xd8\x79\x9b\xbf\x55\xc2\xbd\x81\xa2\x1c\xda\xf8\x85\xe5\xb4\x16\x70\xe8\xcc\x97\xdc\xd8\xea\xed\xc3\xe0\x25\xd1\x0c\x64\x05\xf1\xb5\x63\xc8\xf1\xd0\x73\xfe\xbe\x03\xe9\xf3\x01\xd6\x79\x75\xa2\x62\xc8\x28\xbc\x81\xd6\x07\x40\x53\xc6\x6b\xe7\x0c\xc1\xec\x4e\xe4\x4d\x99\xcc\xf1\xd1\x76\x49\x87\x8a\xff\x89\x5a\x04\xfa\x8b\x86\x73\xf1\x26\x6d\xd3\x89\x0f\x9a\x4a\xe8\xb0\xa4\x0d\x53\xfe\x25\x98\x7e\xb0\x9b\xf1\x52\xc6\xe7\xf1\x67\x36\xba\x9b\x6c\x58\x28\x33\x86\x86\xd8\xe5\x05\x1c\xd8\x0b\x3e\x65\xc1\x46\x72\xeb\x0e\x59\x6d\x5f\x39\x9b\xbd\x4e\x5e\x66\xcf\x84\xeb\xf0\x11\xc7\x28\xe5\x64\xcb\xd3\xcb\x78\x26\x62\x10\x65\x37\x4d\xe3\x05\xa1\x7f\xa4\x62\xba\xb6\x79\x1c\xf3\x2c\xc9\x95\x19\x72\x19\x9a\x6c\xc8\xbf\x64\xd9\x98\xac\xca\x88\x33\xc7\x02\x0d\x9a\x32\xcb\x0c\x80\xb3\xd9\xe5\x98\x76\x7a\xde\x4b\x85\x19\x72\x5d\x36\xcc\x9b\xb1\xee\x44\xa7\xc9\x54\x8c\x75\x07\x91\xc6\xda\xc4\xbd\x38\x41\x98\x2b\x2a\x1a\x21\xbe\xe4\x36\x78\x1b\x95\xf5\x79\x8c\x8c\x8a\x2c\x06\x8e\xbf\x06\xb1\x7f\x8b\x53\xf1\x4b\x2a\x0f\xef\xb3\xee\x7d\xaf\xca\x9d\xf0\x70\x94\x39\xd1\xf4\x2c\x54\x44\x8e\x34\x10\xbf\x92\x74\x8e\x14\xc8\x00\x3c\x4a\x77\xf0\x36\x4b\x7b\xae\x21\xc4\xcf\xc6\x3d\x58\x2f\x60\x36\x59\x50\x32\x06\xeb\xb5\xb3\xb3\x59\xb5\x5e\xc4\xcb\xcf\xf2\x16\x25\x9c\x10\x76\x7c\xf3\x49\x93\x46\x34\x4b\x43\x3a\x31\x85\x1b\x33\xff\xf9\xe4\xe8\xa8\x85\x3f\xce\x00\x2e\x47\x5e\x34\xd8\x25\xa8\xf2\x37\x38\x4c\x1f\x2b\xaa\xe1\x43\x5a\x34\xe3\x89\xd8\x28\x7b\x6a\x39\x15\x79\x6d\xea\xb1\xff\x74\xe3\x22\x45\xb8\x39\xe9\xb8\x8c\x84\x46\x6a\xaf\xc0\x0a\xad\x7f\xe9\xda\xc9\x06\x2b\xd9\xa0\x30\x8a\xd3\x7f\xd7\xf0\xdf\x00\x00\x00\xff\xff\x01\xd9\x86\x68\xe4\x46\x00\x00")

func redirectsRedirectsCsvBytes() ([]byte, error) {
	return bindataRead(
		_redirectsRedirectsCsv,
		"redirects/redirects.csv",
	)
}

func redirectsRedirectsCsv() (*asset, error) {
	bytes, err := redirectsRedirectsCsvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "redirects/redirects.csv", size: 18148, mode: os.FileMode(420), modTime: time.Unix(1518599411, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/error.tmpl": templatesErrorTmpl,
	"templates/main.tmpl": templatesMainTmpl,
	"templates/partials/footer.tmpl": templatesPartialsFooterTmpl,
	"templates/partials/header.tmpl": templatesPartialsHeaderTmpl,
	"redirects/redirects.csv": redirectsRedirectsCsv,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"redirects": &bintree{nil, map[string]*bintree{
		"redirects.csv": &bintree{redirectsRedirectsCsv, map[string]*bintree{}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"error.tmpl": &bintree{templatesErrorTmpl, map[string]*bintree{}},
		"main.tmpl": &bintree{templatesMainTmpl, map[string]*bintree{}},
		"partials": &bintree{nil, map[string]*bintree{
			"footer.tmpl": &bintree{templatesPartialsFooterTmpl, map[string]*bintree{}},
			"header.tmpl": &bintree{templatesPartialsHeaderTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

